import { useEffect, useState } from "react";
import ColorCard from "../components/ColorCard";

function Home() {
  // üîµ –õ–æ–∫–∞–ª–Ω–æ —Å—ä—Å—Ç–æ—è–Ω–∏–µ: –º–∞—Å–∏–≤ —Å —Ü–≤–µ—Ç–æ–≤–µ, –∏ —Ñ–ª–∞–≥ –∑–∞ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ
  const [colors, setColors] = useState([]);
  const [loading, setLoading] = useState(true);

  // üîê –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª –µ –ª–æ–≥–Ω–∞—Ç (–æ—Ç localStorage)
  const user = JSON.parse(localStorage.getItem("user"));

  // üü° –ó–∞—Ä–µ–∂–¥–∞–º–µ —Ü–≤–µ—Ç–æ–≤–µ—Ç–µ –æ—Ç json-server –ø—Ä–∏ –ø—ä—Ä–≤–æ–Ω–∞—á–∞–ª–Ω–æ –∑–∞—Ä–µ–∂–¥–∞–Ω–µ –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchColors();
  }, []);

  const fetchColors = async () => {
    const res = await fetch("http://localhost:5000/colors");
    const data = await res.json();
    setColors(data);
    setLoading(false);
  };

  // üü¢ –ì–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ —Å–ª—É—á–∞–µ–Ω HEX —Ü–≤—è—Ç –∏ –∏–º–µ
  const generateRandomColor = () => {
    const hex = "#" + Math.floor(Math.random() * 16777215).toString(16).padStart(6, '0');
    const name = "Color " + (colors.length + 1);
    return { name, hex };
  };

  // üü† –î–æ–±–∞–≤—è–Ω–µ –Ω–∞ –Ω–æ–≤ —Ü–≤—è—Ç –≤ json-server
  const addColor = async () => {
    const newColor = generateRandomColor();
    const res = await fetch("http://localhost:5000/colors", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify(newColor),
    });
    const added = await res.json();
    setColors([...colors, added]);
  };

  // üî¥ –ò–∑—Ç—Ä–∏–≤–∞–Ω–µ –Ω–∞ —Ü–≤—è—Ç –ø–æ ID (—Å–∞–º–æ –∞–∫–æ –∏–º–∞ –ª–æ–≥–Ω–∞—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª)
  const deleteColor = async (id) => {
    if (!user) return; // –∑–∞—â–∏—Ç–∞ –æ—Ç –∏–∑—Ç—Ä–∏–≤–∞–Ω–µ –∞–∫–æ –Ω–µ –µ –ª–æ–≥–Ω–∞—Ç

    await fetch(`http://localhost:5000/colors/${id}`, {
      method: "DELETE",
    });
    setColors(colors.filter(color => color.id !== id));
  };

  return (
    <div className="container">
      <h2>–°–ø–∏—Å—ä–∫ —Å –¶–≤–µ—Ç–æ–≤–µ</h2>

      {/* –ü–æ–∫–∞–∑–≤–∞–º–µ –±—É—Ç–æ–Ω–∞ –∑–∞ –¥–æ–±–∞–≤—è–Ω–µ —Å–∞–º–æ –∞–∫–æ –∏–º–∞ –ª–æ–≥–Ω–∞—Ç –ø–æ—Ç—Ä–µ–±–∏—Ç–µ–ª */}
      {user && <button onClick={addColor}>–î–æ–±–∞–≤–∏ –°–ª—É—á–∞–µ–Ω –¶–≤—è—Ç</button>}

      {loading ? (
        <p>–ó–∞—Ä–µ–∂–¥–∞–Ω–µ...</p>
      ) : (
        colors.map((color) => (
          <ColorCard
            key={color.id}
            color={color}
            onDelete={user ? deleteColor : null} // –ø—Ä–µ–¥–∞–≤–∞–º–µ delete —Ñ—É–Ω–∫—Ü–∏—è —Å–∞–º–æ –∞–∫–æ –µ –ª–æ–≥–Ω–∞—Ç
          />
        ))
      )}
    </div>
  );
}

export default Home;